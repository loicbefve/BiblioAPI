name: ðŸ“¦ Deploy biblio API

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - 'prod'
          - 'dev'
      ref:
        description: 'What branch, tag or SHA to deploy (default: master)'
        required: false
        default: 'master'

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: loicbefve/biblio-api:latest

jobs:
  publish:
    name: ðŸš€ Publish image to registry
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Login on registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u loicbefve --password-stdin

      - name: Build and push image
        run: |
          docker build . --tag ${{env.DOCKER_REGISTRY}}/${{env.IMAGE_NAME}}
          docker push ${{env.DOCKER_REGISTRY}}/${{env.IMAGE_NAME}}

  deploy:
    name: ðŸšš Deploy to environment
    runs-on: ubuntu-latest

    needs: publish

    steps:
      - name: Set SSH_HOST for the env
        run: |
          if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            echo "SSH_HOST=${{ secrets.SSH_HOST_PROD }}" >> $GITHUB_ENV
          else
            echo "SSH_HOST=${{ secrets.SSH_HOST_DEV }}" >> $GITHUB_ENV
          fi
      - name: install SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{env.SSH_HOST}} >> ~/.ssh/known_hosts

      - name: connect and pull
        run: |
          ssh ${{secrets.SSH_USER}}@${{env.SSH_HOST}} "cd ${{secrets.WORK_DIRECTORY}} && && sudo git pull && sudo docker-compose -f docker-compose.prod.yml pull && sudo docker-compose -f docker-compose.prod.yml up -d && exit"

      - name : cleanup
        run: |
          rm -rf ~/.ssh